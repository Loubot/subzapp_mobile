// Generated by CoffeeScript 1.10.0
'use strict';
angular.module('subzapp_mobile').controller('EditUserController', [
  '$scope', '$state', '$http', '$window', 'message', 'user', 'RESOURCES', 'stripe', '$rootScope', '$ionicLoading', '$ionicModal', function($scope, $state, $http, $window, message, user, RESOURCES, stripe, $rootScope, $ionicLoading, $ionicModal) {
    var user_token;
    console.log('EditUser Controller');
    $scope.card = {};
    user_token = window.localStorage.getItem('user_token');
    user.get_user().then((function(res) {
      var USER;
      USER = $rootScope.USER;
      console.log(USER.tokens[0].amount);
      $scope.tokens = USER.tokens[0].amount;
      return $scope.user_data = USER;
    }), function(errResponse) {
      console.log("User get error " + (JSON.stringify(errResponse)));
      $rootScope.USER = null;
      return $state.go('login');
    });
    $scope.edit_user = function() {
      $ionicLoading.show({
        template: 'Updating...'
      });
      return $http({
        method: 'POST',
        url: RESOURCES.DOMAIN + "/edit-user",
        headers: {
          'Authorization': "JWT " + user_token,
          "Content-Type": "application/json"
        },
        data: {
          id: $scope.user_data.id,
          firstName: $scope.user_data.firstName,
          lastName: $scope.user_data.lastName
        }
      }).then((function(response) {
        console.log("Edit user response ");
        console.log(response);
        $ionicLoading.hide();
        return message.success('User updated ok');
      }), function(errResponse) {
        console.log("Edit user error");
        console.log(errResponse);
        $ionicLoading.hide();
        return message.error(JSON.stringify(errResponse));
      });
    };
    $scope.stripe_submit = function() {
      var amount, stripe_response;
      console.log('stripe');
      $ionicLoading.show({
        template: 'Loading...'
      });
      amount = $scope.card.amount;
      delete $scope.card.amount;
      stripe_response = function(status, token) {
        return $http({
          method: 'POST',
          url: RESOURCES.DOMAIN + "/create-payment",
          headers: {
            'Authorization': "JWT " + user_token,
            "Content-Type": "application/json"
          },
          data: {
            stripe_token: token.id,
            amount: amount,
            user_id: $rootScope.USER.id
          }
        }).then((function(res) {
          console.log("res " + (JSON.stringify(res.data.message)));
          message.success(res.data.message);
          $scope.tokens = res.data.token.amount;
          return setTimeout((function() {
            $ionicLoading.hide();
            return $state.go("edit-user");
          }), 5000);
        }), function(errResponse) {
          console.log("Create payment error " + (JSON.stringify(errResponse)));
          console.log(errResponse);
          message.error(errResponse.data);
          return $ionicLoading.hide();
        });
      };
      stripe.setPublishableKey('pk_test_bfa4lYmoaJZTm9d94qBTEEra');
      return stripe.card.createToken($scope.card, stripe_response);
    };
    return $scope.add_validation = function(e) {
      var t;
      console.log("he hey");
      t = e.target;
      $(t).addClass('validation');
      console.log(e);
      return true;
    };
  }
]);

$(document).on('focus', '#cardNumber', function(e) {
  console.log(e);
  return $(this).css('border-color', 'red !important');
});

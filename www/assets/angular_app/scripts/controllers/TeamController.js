// Generated by CoffeeScript 1.10.0
'use strict';
var check_if_member, check_if_member_after_create;

angular.module('subzapp_mobile').controller('TeamController', [
  '$scope', '$state', '$http', '$window', '$location', 'message', 'user', 'RESOURCES', '$rootScope', function($scope, $state, $http, $window, $location, message, user, RESOURCES, $rootScope) {
    var user_token;
    console.log("Team Controller");
    user_token = window.localStorage.getItem('user_token');
    user.get_user().then((function(res) {
      user = $rootScope.USER;
      console.log(user);
      $scope.is_member = check_if_member(user, $location.search().id);
      return $scope.user = user;
    }), function(err) {
      window.USER = null;
      return $state.go('login');
    });
    $http({
      method: 'GET',
      url: RESOURCES.DOMAIN + "/get-team",
      headers: {
        'Authorization': "JWT " + user_token,
        "Content-Type": "application/json"
      },
      params: {
        team_id: $location.search().id
      }
    }).then((function(res) {
      $scope.team = res.data;
      return $scope.events = res.data.events;
    }), function(errResponse) {
      return console.log("Get team error " + (JSON.stringify(errResponse)));
    });
    $scope.join_team = function(id) {
      console.log("User " + USER.id);
      return $http({
        method: 'POST',
        url: RESOURCES.DOMAIN + "/join-team",
        headers: {
          'Authorization': "JWT " + user_token,
          "Content-Type": "application/json"
        },
        data: {
          user_id: USER.id,
          team_id: $location.search().id
        }
      }).then((function(res) {
        console.log("Join team response " + (JSON.stringify(res)));
        return $scope.is_member = check_if_member_after_create(res.data.team_members, USER.id);
      }), function(errResponse) {
        return console.log("Join team error " + (JSON.stringify(errResponse)));
      });
    };
    $scope.edit_user = function() {
      return $state.go('edit-user');
    };
    return $scope.pay_up = function(id, price) {
      return $http({
        method: 'POST',
        url: RESOURCES.DOMAIN + "/pay-for-event",
        headers: {
          'Authorization': "JWT " + user_token,
          "Content-Type": "application/json"
        },
        data: {
          event_id: id,
          event_price: price
        }
      }).then((function(res) {
        console.log("Pay up response");
        return console.log(res);
      }), function(errResponse) {
        console.log("Pay up error");
        return console.log(errResponse);
      });
    };
  }
]);

check_if_member = function(user, team_id) {
  var team;
  team = (function() {
    var i, len, ref, results;
    ref = user.user_teams;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      team = ref[i];
      if (team.id === parseInt(team_id)) {
        results.push(team);
      }
    }
    return results;
  })();
  console.log("Team result " + (typeof team));
  return team.length;
};

check_if_member_after_create = function(team_mems, user_id) {
  var mem, users;
  users = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = team_mems.length; i < len; i++) {
      mem = team_mems[i];
      if (mem.id === user_id) {
        results.push(mem);
      }
    }
    return results;
  })();
  console.log("team " + (JSON.stringify(users)));
  return users.length;
};
